{"version":3,"sources":["components/Upload/Upload.module.css","components/Header/Header.module.css","components/HomeIcon/HomeIcon.module.css","components/UploadIcon/UploadIcon.module.css","components/Footer/Footer.module.css","components/Upload/Upload.js","actions/index.js","actions/action.type.js","components/HomeIcon/HomeIcon.js","components/UploadIcon/UploadIcon.js","components/Header/Header.js","components/Layout/Layout.js","components/Footer/Footer.js","App.js","redux/document.reducer.js","redux/root.reducer.js","redux/store.js","serviceWorker.js","index.js","components/Layout/Layout.module.css"],"names":["module","exports","reader","FileReader","Upload","state","disabled","files","onClickHandler","e","console","log","props","uploadDocument","fileName","data","setState","onChangeHandler","target","err","types","i","every","type","length","self","onload","text","result","split","RegExp","join","filter","el","name","onerror","event","abort","readAsText","error","this","className","classes","file","onChange","onClick","button","Component","connect","filename","HomeIcon","Home","to","icon","faHome","UploadIcon","Carticon","faCloudUploadAlt","Header","Logo","Layout","searchTerm","display","results","handleChange","value","keys","Object","temp","map","str","concat","key","includes","push","resultKey","noResults","Noresult","index","count","Input","placeholder","Button","Ruler","document","Footer","App","path","component","exact","INITITAL_STATE","cartReducer","newData","tempData","action","trim","rootReducer","combineReducers","documentReducer","store","createStore","applyMiddleware","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.12d70698.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Upload\":\"Upload_Upload__3oMjD\",\"file\":\"Upload_file__3fC6B\",\"button\":\"Upload_button__1178p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__1S-cr\",\"text\":\"Header_text__2rBL6\",\"Logo\":\"Header_Logo__3vzSp\",\"DesktopOnly\":\"Header_DesktopOnly__2Exuu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"HomeIcon_Home__38kVr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Carticon\":\"UploadIcon_Carticon__3xXS4\",\"shopping-icon\":\"UploadIcon_shopping-icon__19MPI\",\"itemcount\":\"UploadIcon_itemcount__ujvmN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__1ItNA\"};","import React, { Component } from 'react'\r\nimport classes from './Upload.module.css';\r\nimport {connect} from 'react-redux';\r\nimport {uploadDocument} from '../../actions/index';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nlet reader = new FileReader();\r\nclass Upload extends Component {\r\n\r\n  state={\r\n    disabled: true,\r\n    files: null\r\n  }\r\n\r\n  onClickHandler = e => {\r\n    console.log('Upload ', this.state.files);\r\n    // let data = new FormData()\r\n    // this.state.files.map(file =>{\r\n      // data.append('file', file)\r\n    // });\r\n    // data.append('file', this.state.selectedFile)\r\n    // self.props.uploadDocument(files[0].name, text);\r\n    this.props.uploadDocument(this.state.fileName, this.state.data);\r\n    this.setState({disabled:true})\r\n  }\r\n\r\n  onChangeHandler = e => {\r\n    let {files} = e.target;\r\n    let err = [];\r\n    \r\n    const types = ['text/plain']\r\n    for(let i = 0; i<files.length; i++) {\r\n        if (types.every(type => files[i].type !== type)) {\r\n        err[i] = files[i].type+' is not a supported format\\n';\r\n      }\r\n    };\r\n    if(!err.length && files.length){\r\n      this.setState({disabled:false, files: files});\r\n      // let reader = new FileReader();\r\n      let self = this;\r\n      reader.onload = function() {\r\n        let text = reader.result;\r\n        // console.log('Reader', reader.result.substring(0, 200));\r\n        // console.log('Reader ', 'name',files[0].name , text.split('\\n').join(' ').trim().split(' '));\r\n        let separators = [' ', '\\\\+', '\\\\(', '\\\\\\)','\\\\*', '/', ':', '\\\\\\?', '\\n'];\r\n        // console.log('Reader ', 'name',files[0].name , text.split('\\n'));\r\n        // console.log('Reader ', 'name',files[0].name , text.split('\\n').join(' '));\r\n        text = text.split(new RegExp(separators.join('|')));\r\n        text = text.filter(el => el!='');\r\n        self.setState({fileName:files[0].name, data:text });\r\n        // self.props.uploadDocument(files[0].name, text);\r\n        // console.log('Reader ', 'name',files[0].name , text);\r\n      };\r\n      \r\n      reader.onerror = function(event) {\r\n        console.log('error')\r\n        reader.abort();\r\n      };\r\n      reader.readAsText(files[0]);\r\n    } else{\r\n      this.setState({disabled:true, error:err});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state);\r\n    return (\r\n      <div className={classes.Upload}>\r\n        <input className = {classes.file} type='file' onChange={this.onChangeHandler}/>\r\n         <button type=\"button\" \r\n            onClick ={this.onClickHandler}\r\n            className={`${classes.button} btn btn-primary`} \r\n            disabled={this.state.disabled}>Upload</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, {uploadDocument})(Upload);","import * as actions from './action.type';\n\nexport const uploadDocument = (filename, data) => ({\n  type: actions.UPLOAD_DOCUMENT,\n  filename,\n  data,\n});","\nexport const UPLOAD_DOCUMENT = 'UPLOAD_DOCUMENT'","import React from 'react'\r\nimport { Link} from 'react-router-dom';\r\nimport classes from './HomeIcon.module.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHome } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst HomeIcon = props => (\r\n\r\n  <div className={classes.Home} >\r\n    <Link to='/' className={classes.Home}>\r\n       <FontAwesomeIcon icon={faHome} />\r\n      </Link>\r\n  </div>\r\n);\r\n\r\nexport default  HomeIcon;\r\n","import React from 'react'\r\nimport { Link} from 'react-router-dom';\r\nimport classes from './UploadIcon.module.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCloudUploadAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst UploadIcon = props => (\r\n\r\n  <div className={classes.Carticon} >\r\n    <Link to='/upload' className={classes.Carticon}>\r\n       <FontAwesomeIcon icon={faCloudUploadAlt} />\r\n      </Link>\r\n  </div>\r\n);\r\n\r\nexport default  UploadIcon;\r\n","import React from 'react'\r\nimport classes from './Header.module.css';\r\nimport HomeIcon from '../HomeIcon/HomeIcon';\r\nimport UploadIcon from '../UploadIcon/UploadIcon';\r\n\r\nconst Header = props => (\r\n  <header className={classes.Header} >\r\n    \r\n    <div className={classes.Logo} >\r\n      <HomeIcon />\r\n    </div>\r\n    <div className={classes.text}>Mini Search Engine</div>\r\n    <UploadIcon />\r\n  </header>\r\n);\r\n\r\nexport default Header;","import React, { Component } from 'react'\r\nimport classes from './Layout.module.css';\r\nimport {connect} from 'react-redux';\r\n\r\nlet disabled = true;\r\nlet strLen;\r\nclass Layout extends Component {\r\n\r\n  state={\r\n    searchTerm:'',\r\n    display:false,\r\n    disabled:true,\r\n    results: null,\r\n  }\r\n\r\n  handleChange =e => {\r\n    strLen = e.target.value.length;\r\n    if(strLen >=3){\r\n      disabled = false\r\n    }\r\n    this.setState({searchTerm:e.target.value, disabled});\r\n  }\r\n\r\n  onClickHandler = e => {\r\n    \r\n    let {data} = this.props;\r\n    let keys = Object.keys(data);\r\n    let temp = [];\r\n    let individualStr = this.state.searchTerm.split(' ');\r\n    individualStr.map(str => {\r\n      temp = temp.concat(keys.filter(key => key.includes(str)));\r\n    })\r\n    keys = temp;\r\n    \r\n    let result =[];\r\n    keys.map(key => {\r\n      result.push(data[key]);\r\n    });\r\n    console.log('keys ', keys);\r\n    console.log('keys ', result);\r\n    this.setState({disabled:true, display:true, results:Object.keys(result)? result:null});\r\n  }\r\n  render() {\r\n    let noResults  = (<div className={classes.Noresult}>No Results Found!!</div>);\r\n    let results = null;\r\n    let resultKey;\r\n    let filename;\r\n    console.log('Results ', this.state.results);\r\n    if(this.state.results){\r\n      results =this.state.results.map((result, index) => { \r\n        console.log('result ', result, Object.keys(result)[0])\r\n        resultKey = this.state.searchTerm.split(' ')[index];\r\n        filename = Object.keys(result.filename)[0];\r\n        console.log('Index: ',result.filename[filename])\r\n          return (<div className={classes.result} key={index}>\r\n            <div><strong>Found:     </strong> {resultKey}</div>\r\n            <div><strong>Filename:  </strong>{filename}</div>\r\n            <div><strong>Frequency: </strong>{result.count}</div>\r\n            <div><strong>Index:     </strong>{result.filename[filename].join(', ')}</div>\r\n        </div>)}\r\n      )\r\n    }\r\n    console.log('Data ', this.props.data);\r\n    return (\r\n      <div className={classes.Layout}>\r\n        <div>\r\n          <input \r\n            className={classes.Input} \r\n            placeholder='Enter Search Term'\r\n            type='text' onChange={this.handleChange}  value={this.state.searchTerm}/>\r\n        </div>\r\n        <div className={classes.Button}>\r\n          <button type=\"button\" \r\n              onClick ={this.onClickHandler}\r\n              className={`${classes.button} btn btn-primary`} \r\n              disabled={this.state.disabled}>Search</button>\r\n        </div>\r\n        { this.state.display && <hr className={classes.Ruler}/>}\r\n        {this.state.display && <div>\r\n          {!this.state.results && noResults}\r\n        </div>}\r\n        {results}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({document}) => ({\r\n  data: document.data\r\n});\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React from 'react'\nimport classes from './Footer.module.css';\n\nconst Footer = props => (\n  <footer className={classes.Footer} >\n  </footer>\n);\n\nexport default Footer;","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport Upload from './components/Upload/Upload';\nimport Header from './components/Header/Header';\nimport Layout from './components/Layout/Layout';\nimport Footer from './components/Footer/Footer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n        <Header />\n        <Switch>\n          <Route path=\"/upload\" component={Upload} />\n          <Route path=\"/\" exact component={Layout} />\n        </Switch>\n        <Footer />\n      </div>\n  );\n}\n\nexport default App;\n","import {UPLOAD_DOCUMENT} from '../actions/action.type';\n\nconst INITITAL_STATE = {\n  data:{}\n};\n\nconst cartReducer = (state = INITITAL_STATE, action) =>{\n  let newData;\n  let tempData;\n  switch(action.type){\n    case UPLOAD_DOCUMENT:\n      newData = {...state.data};\n      action.data.map((value, index) => {\n        if(newData[value]){\n          tempData = {...newData[value]};\n          tempData.count += 1; \n          tempData.index = [...tempData.index, index];\n          if(tempData.filename[action.filename]){\n            tempData.filename[action.filename] = [...tempData.filename[action.filename], index];\n          }else{\n            tempData.filename[action.filename] = [index];\n          }\n          newData[value] = tempData;\n        } else {\n          newData[value.trim()] = {\n            'filename': {[action.filename]: [index]}, \n            count: 1, \n            index:[index]\n          }\n          // newData[value].filename[action.filename] = [index]\n        }\n      });\n      \n      console.log('newdata ', newData);\n      return {\n        ...state,\n        data: newData,\n      };  \n    default:\n      return state;\n  }\n}\n\nexport default  cartReducer;","import {combineReducers} from 'redux';\nimport documentReducer from './document.reducer';\n// import {persistReducer} from 'redux-persist';\n// import storageSession from 'redux-persist/lib/storage/session';\n// import storage from 'redux-persist/lib/storage';\n\n// const persistConfig = {\n//   key: 'root',\n//   storage: storageSession,\n//   whitelist: ['cart'],\n// } \n\nconst rootReducer = combineReducers({\n  document: documentReducer,\n});\n\n// export default persistReducer(persistConfig, rootReducer);\nexport default rootReducer;\n","import {createStore, applyMiddleware} from 'redux';\n// import logger from 'redux-logger';\n// import {persistStore} from 'redux-persist';\n\nimport rootReducer from './root.reducer';\n\nlet middleWares = [];\n\n// if(process.env.NODE_ENV === 'development'){\n//   middleWares.push(logger);\n// }\n\nconst store = createStore(rootReducer, applyMiddleware(...middleWares));\n\n// export const persistor = persistStore(store);\n\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport store from '../src/redux/store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3SFDO\",\"result\":\"Layout_result__3hYit\",\"Ruler\":\"Layout_Ruler__pWcur\",\"Noresult\":\"Layout_Noresult__13Vlz\",\"Input\":\"Layout_Input__SVBPw\",\"Button\":\"Layout_Button__21lov\"};"],"sourceRoot":""}